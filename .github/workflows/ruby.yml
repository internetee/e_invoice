name: Github Testing
on: [push]


jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        ruby: [ 2.7 ]
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ endsWith(matrix.ruby, 'head') || matrix.ruby == 'debug' }}
    steps:

    - uses: actions/checkout@v4
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - name: config bundler
      run:  |
        bundle config set without 'development staging production'
        bundle config set deployment '[secure]'
        bundle env
        head -n1 $(which bundle)

    - name: Setup qlty.sh
      run: |
        curl -sSL https://qlty.sh/install.sh | bash
        qlty --version

    - name: Run Tests
      env:
        RAILS_ENV: test
        DISABLE_SPRING: 1
      run: |
        gem install bundler -v '>= 2.2.10'
        gem install builder
        gem install nokogiri -v '~> 1.11.3'
        gem install savon
        gem install webmock
        gem install mocha
        gem install minitest -v '~> 5.14'
        bundle install
        rake

    - name: Run qlty.sh analysis
      run: |
        qlty analyze --format json --output qlty-report.json

    - uses: actions/upload-artifact@v3.1.3
      with:
        name: qlty-report-${{ matrix.ruby }}
        path: qlty-report.json

  quality_check:
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
        ruby: [ '2.7' ]
    runs-on: ubuntu-20.04
    needs: test

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup qlty.sh
        run: |
          curl -sSL https://qlty.sh/install.sh | bash
          qlty --version

      - uses: actions/download-artifact@v3.0.2
        with:
          name: qlty-report-${{ matrix.ruby }}
          path: reports

      - name: Process qlty.sh results
        run: |
          if [ -f reports/qlty-report.json ]; then
            echo "Quality analysis completed"
            cat reports/qlty-report.json
          else
            echo "No quality report found"
            exit 1
          fi

